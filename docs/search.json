[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": " federal workers live in ",
    "section": "",
    "text": "viewof state_selection = Inputs.select(state_data.map((d) =&gt; d.state_name), {label: \"Select a state\"})\n\n\n\n\n\n\n\n federal workers live in \n\nFederal workers, by place of residence\n\nCongressional DistrictCountyMetro\n\n\n\nInputs.table(cd_filtered, {\n  columns: [\n    \"geo_name\",\n    \"federal_workers\",\n    \"margin_of_error\",\n    \"share_of_employment\"\n  ],\n  width: \"auto\",\n  header: {\n    geo_name: \"Congressional District\",\n    federal_workers: \"Federal workers\",\n    margin_of_error: \"Margin of error\",\n    share_of_employment: \"Share of total employment\"\n  },\n  format: {\n    federal_workers: d3.format(\",.0f\"),\n    margin_of_error: d3.format(\",.0f\"),\n    share_of_employment: d3.format(\".1%\")\n  },\n  select: false,\n  rows: 300\n})\n\n\n\n\n\n\n\n\n\nInputs.table(county_filtered, {\n  columns: [\n    \"geo_name\",\n    \"federal_workers\",\n    \"margin_of_error\",\n    \"share_of_employment\"\n  ],\n  width: \"auto\",\n  header: {\n    geo_name: \"County\",\n    federal_workers: \"Federal workers\",\n    margin_of_error: \"Margin of error\",\n    share_of_employment: \"Share of total employment\"\n  },\n  format: {\n    federal_workers: d3.format(\",.0f\"),\n    margin_of_error: d3.format(\",.0f\"),\n    share_of_employment: d3.format(\".1%\")\n  },\n  select: false,\n  rows: 300\n})\n\n\n\n\n\n\n\n\n\nInputs.table(metro_filtered, {\n  columns: [\n    \"geo_name\",\n    \"federal_workers\",\n    \"margin_of_error\",\n    \"share_of_employment\"\n  ],\n  width: \"auto\",\n  header: {\n    geo_name: \"Metro area\",\n    federal_workers: \"Federal workers\",\n    margin_of_error: \"Margin of error\",\n    share_of_employment: \"Share of total employment\"\n  },\n  format: {\n    federal_workers: d3.format(\",.0f\"),\n    margin_of_error: d3.format(\",.0f\"),\n    share_of_employment: d3.format(\".1%\")\n  },\n  select: false,\n  rows: 300\n})\n\n\n\n\n\n\n\n\n\n\ncd_download_text = \"Download \" + state_selection + \" Congressional Districts\" \n\nDOM.download(async () =&gt; {\n  const csvString = d3.csvFormat([...cd_filtered]);\n  return new Blob([csvString], { type: \"text/csv\" });\n}, \"federal_workers_cd_selections.csv\", cd_download_text)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncounty_download_text = \"Download \" + state_selection + \" counties\" \n\nDOM.download(async () =&gt; {\n  const csvString = d3.csvFormat([...county_filtered]);\n  return new Blob([csvString], { type: \"text/csv\" });\n}, \"federal_workers_county_selections.csv\", county_download_text)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmetro_download_text = \"Download \" + state_selection + \" metro areas\" \n\nDOM.download(async () =&gt; {\n  const csvString = d3.csvFormat([...metro_filtered]);\n  return new Blob([csvString], { type: \"text/csv\" });\n}, \"federal_workers_metro_selections.csv\", metro_download_text)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe data are from the 2023 American Community Survey 1-year estimates of civilian employment by class of worker. The tables above extend the estimates previously published in 2024 Congressional Research Service report R47716. The margin of error is for a 90% percent confidence interval. The share of total employment is the number of federal workers divided by all workers in a given location. Some small counties or areas may not be listed.\nAnalysis by Ben Zipperer, 16 February 2025, Economic Policy Institute. View the code, or download the data for every region at the level of Congressional Districts, counties, metro areas, or states.\n\nstate_data = FileAttachment(\"web_assets/federal_workers_state.csv\").csv({typed: true})\ncounty_data = FileAttachment(\"web_assets/federal_workers_county.csv\").csv({typed: true})\ncd_data = FileAttachment(\"web_assets/federal_workers_cd.csv\").csv({typed: true})\nmetro_data = FileAttachment(\"web_assets/federal_workers_metro.csv\").csv({typed: true})\n\nstate_filtered = state_data\n  .filter((d) =&gt; d.state_name == state_selection)\n\ncounty_filtered = county_data\n  .filter((d) =&gt; d.state_name == state_selection)\n\ncd_filtered = cd_data\n  .filter((d) =&gt; d.state_name == state_selection)\n\nmetro_filtered = metro_data\n  .filter((d) =&gt; d.state_name == state_selection)\n\nstate_count = d3.format(\",.0f\")(state_filtered[0]['federal_workers'])"
  }
]